// Code generated by generator; DO NOT EDIT.
package holiday

// Year2007Data contains holiday data for year 2007
var Year2007Data map[string]Day

// Init2007 initializes the holiday data for year 2007
func Init2007() map[string]Day {
	data := make(map[string]Day, 32)
	data["2006-12-30"] = Day{Name: "元旦", Date: "2006-12-30", IsOffDay: false}
	data["2006-12-31"] = Day{Name: "元旦", Date: "2006-12-31", IsOffDay: false}
	data["2007-01-01"] = Day{Name: "元旦", Date: "2007-01-01", IsOffDay: true}
	data["2007-01-02"] = Day{Name: "元旦", Date: "2007-01-02", IsOffDay: true}
	data["2007-01-03"] = Day{Name: "元旦", Date: "2007-01-03", IsOffDay: true}
	data["2007-02-17"] = Day{Name: "春节", Date: "2007-02-17", IsOffDay: false}
	data["2007-02-18"] = Day{Name: "春节", Date: "2007-02-18", IsOffDay: true}
	data["2007-02-19"] = Day{Name: "春节", Date: "2007-02-19", IsOffDay: true}
	data["2007-02-20"] = Day{Name: "春节", Date: "2007-02-20", IsOffDay: true}
	data["2007-02-21"] = Day{Name: "春节", Date: "2007-02-21", IsOffDay: true}
	data["2007-02-22"] = Day{Name: "春节", Date: "2007-02-22", IsOffDay: true}
	data["2007-02-23"] = Day{Name: "春节", Date: "2007-02-23", IsOffDay: true}
	data["2007-02-24"] = Day{Name: "春节", Date: "2007-02-24", IsOffDay: true}
	data["2007-02-25"] = Day{Name: "春节", Date: "2007-02-25", IsOffDay: false}
	data["2007-04-28"] = Day{Name: "“五一”", Date: "2007-04-28", IsOffDay: false}
	data["2007-04-29"] = Day{Name: "“五一”", Date: "2007-04-29", IsOffDay: false}
	data["2007-05-01"] = Day{Name: "“五一”", Date: "2007-05-01", IsOffDay: true}
	data["2007-05-02"] = Day{Name: "“五一”", Date: "2007-05-02", IsOffDay: true}
	data["2007-05-03"] = Day{Name: "“五一”", Date: "2007-05-03", IsOffDay: true}
	data["2007-05-04"] = Day{Name: "“五一”", Date: "2007-05-04", IsOffDay: true}
	data["2007-05-05"] = Day{Name: "“五一”", Date: "2007-05-05", IsOffDay: true}
	data["2007-05-06"] = Day{Name: "“五一”", Date: "2007-05-06", IsOffDay: true}
	data["2007-05-07"] = Day{Name: "“五一”", Date: "2007-05-07", IsOffDay: true}
	data["2007-09-29"] = Day{Name: "“十一”", Date: "2007-09-29", IsOffDay: false}
	data["2007-09-30"] = Day{Name: "“十一”", Date: "2007-09-30", IsOffDay: false}
	data["2007-10-01"] = Day{Name: "“十一”", Date: "2007-10-01", IsOffDay: true}
	data["2007-10-02"] = Day{Name: "“十一”", Date: "2007-10-02", IsOffDay: true}
	data["2007-10-03"] = Day{Name: "“十一”", Date: "2007-10-03", IsOffDay: true}
	data["2007-10-04"] = Day{Name: "“十一”", Date: "2007-10-04", IsOffDay: true}
	data["2007-10-05"] = Day{Name: "“十一”", Date: "2007-10-05", IsOffDay: true}
	data["2007-10-06"] = Day{Name: "“十一”", Date: "2007-10-06", IsOffDay: true}
	data["2007-10-07"] = Day{Name: "“十一”", Date: "2007-10-07", IsOffDay: true}
	return data
}

// IsHoliday2007 checks if a given date in 2007 is a holiday
func IsHoliday2007(dateStr string) (bool, string, error) {
	data := GetYearData(2007)
	if day, exists := data[dateStr]; exists {
		return day.IsOffDay, day.Name, nil
	}
	return false, "", nil
}